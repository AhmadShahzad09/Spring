{"ast":null,"code":"import _asyncToGenerator from \"/workspaces/fx-deals 2/src/fx-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nlet FxDealListComponent = class FxDealListComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.fxDeals = [];\n    this.loading = new EventEmitter();\n    this.alert = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.getAllFxDeals();\n  }\n\n  getAllFxDeals() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.loading.emit(true);\n\n      try {\n        const response = yield _this.dataService.getAllFxDeals();\n\n        if (!response.ok) {\n          const {\n            error\n          } = yield response.json();\n          _this.fxDeals = [];\n\n          _this.alert.emit({\n            visible: true,\n            status: 'danger',\n            message: error.message\n          });\n\n          return;\n        }\n\n        const {\n          responseBody\n        } = yield response.json();\n        _this.fxDeals = JSON.parse(JSON.stringify(responseBody));\n      } catch (e) {\n        _this.fxDeals = [];\n\n        _this.alert.emit({\n          visible: true,\n          status: 'danger',\n          message: 'Error!'\n        });\n      } finally {\n        _this.loading.emit(false);\n      }\n    })();\n  }\n\n};\n\n__decorate([Output()], FxDealListComponent.prototype, \"loading\", void 0);\n\n__decorate([Output()], FxDealListComponent.prototype, \"alert\", void 0);\n\nFxDealListComponent = __decorate([Component({\n  selector: 'fx-deal-list',\n  templateUrl: './fx-deal-list.component.html',\n  styleUrls: ['./fx-deal-list.component.css']\n})], FxDealListComponent);\nexport { FxDealListComponent };","map":{"version":3,"sources":["/workspaces/fx-deals 2/src/fx-ui/src/app/fx-deal-list/fx-deal-list.component.ts"],"names":["__decorate","Component","EventEmitter","Output","FxDealListComponent","constructor","dataService","fxDeals","loading","alert","ngOnInit","getAllFxDeals","emit","response","ok","error","json","visible","status","message","responseBody","JSON","parse","stringify","e","prototype","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,MAAlC,QAAgD,eAAhD;AACA,IAAIC,mBAAmB,GAAG,MAAMA,mBAAN,CAA0B;AAChDC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,OAAL,GAAe,IAAIN,YAAJ,EAAf;AACA,SAAKO,KAAL,GAAa,IAAIP,YAAJ,EAAb;AACH;;AACDQ,EAAAA,QAAQ,GAAG;AACP,SAAKC,aAAL;AACH;;AACKA,EAAAA,aAAa,GAAG;AAAA;;AAAA;AAClB,MAAA,KAAI,CAACH,OAAL,CAAaI,IAAb,CAAkB,IAAlB;;AACA,UAAI;AACA,cAAMC,QAAQ,SAAS,KAAI,CAACP,WAAL,CAAiBK,aAAjB,EAAvB;;AACA,YAAI,CAACE,QAAQ,CAACC,EAAd,EAAkB;AACd,gBAAM;AAAEC,YAAAA;AAAF,oBAAkBF,QAAQ,CAACG,IAAT,EAAxB;AACA,UAAA,KAAI,CAACT,OAAL,GAAe,EAAf;;AACA,UAAA,KAAI,CAACE,KAAL,CAAWG,IAAX,CAAgB;AACZK,YAAAA,OAAO,EAAE,IADG;AAEZC,YAAAA,MAAM,EAAE,QAFI;AAGZC,YAAAA,OAAO,EAAEJ,KAAK,CAACI;AAHH,WAAhB;;AAKA;AACH;;AACD,cAAM;AAAEC,UAAAA;AAAF,kBAAyBP,QAAQ,CAACG,IAAT,EAA/B;AACA,QAAA,KAAI,CAACT,OAAL,GAAec,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,YAAf,CAAX,CAAf;AACH,OAdD,CAeA,OAAOI,CAAP,EAAU;AACN,QAAA,KAAI,CAACjB,OAAL,GAAe,EAAf;;AACA,QAAA,KAAI,CAACE,KAAL,CAAWG,IAAX,CAAgB;AACZK,UAAAA,OAAO,EAAE,IADG;AAEZC,UAAAA,MAAM,EAAE,QAFI;AAGZC,UAAAA,OAAO,EAAE;AAHG,SAAhB;AAKH,OAtBD,SAuBQ;AACJ,QAAA,KAAI,CAACX,OAAL,CAAaI,IAAb,CAAkB,KAAlB;AACH;AA3BiB;AA4BrB;;AAtC+C,CAApD;;AAwCAZ,UAAU,CAAC,CACPG,MAAM,EADC,CAAD,EAEPC,mBAAmB,CAACqB,SAFb,EAEwB,SAFxB,EAEmC,KAAK,CAFxC,CAAV;;AAGAzB,UAAU,CAAC,CACPG,MAAM,EADC,CAAD,EAEPC,mBAAmB,CAACqB,SAFb,EAEwB,OAFxB,EAEiC,KAAK,CAFtC,CAAV;;AAGArB,mBAAmB,GAAGJ,UAAU,CAAC,CAC7BC,SAAS,CAAC;AACNyB,EAAAA,QAAQ,EAAE,cADJ;AAENC,EAAAA,WAAW,EAAE,+BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,8BAAD;AAHL,CAAD,CADoB,CAAD,EAM7BxB,mBAN6B,CAAhC;AAOA,SAASA,mBAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nlet FxDealListComponent = class FxDealListComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.fxDeals = [];\n        this.loading = new EventEmitter();\n        this.alert = new EventEmitter();\n    }\n    ngOnInit() {\n        this.getAllFxDeals();\n    }\n    async getAllFxDeals() {\n        this.loading.emit(true);\n        try {\n            const response = await this.dataService.getAllFxDeals();\n            if (!response.ok) {\n                const { error } = await response.json();\n                this.fxDeals = [];\n                this.alert.emit({\n                    visible: true,\n                    status: 'danger',\n                    message: error.message,\n                });\n                return;\n            }\n            const { responseBody } = await response.json();\n            this.fxDeals = JSON.parse(JSON.stringify(responseBody));\n        }\n        catch (e) {\n            this.fxDeals = [];\n            this.alert.emit({\n                visible: true,\n                status: 'danger',\n                message: 'Error!',\n            });\n        }\n        finally {\n            this.loading.emit(false);\n        }\n    }\n};\n__decorate([\n    Output()\n], FxDealListComponent.prototype, \"loading\", void 0);\n__decorate([\n    Output()\n], FxDealListComponent.prototype, \"alert\", void 0);\nFxDealListComponent = __decorate([\n    Component({\n        selector: 'fx-deal-list',\n        templateUrl: './fx-deal-list.component.html',\n        styleUrls: ['./fx-deal-list.component.css']\n    })\n], FxDealListComponent);\nexport { FxDealListComponent };\n"]},"metadata":{},"sourceType":"module"}